# Generated by Django 2.2.3 on 2020-02-07 12:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    # dependencies = [
    #     ('auth', '0011_update_proxy_permissions'),
    # ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userType', models.IntegerField(choices=[(1, '学生'), (2, '教职工')], default=1, verbose_name='用户类型')),
                ('phoneNumber', models.CharField(default='', max_length=64, verbose_name='手机号')),
                ('realName', models.CharField(default='', max_length=20, verbose_name='真实姓名')),
                ('ifHealthy', models.IntegerField(choices=[(1, '良好'), (2, '疑似'), (3, '确诊')], default=1, verbose_name='健康状态')),
                ('ifTouched', models.IntegerField(choices=[(1, '无接触史'), (2, '目前仍然在湖北'), (3, '与确证患者有密切接触经历'), (4, '2020年1月10日后在湖北逗留过')], default=1, verbose_name='接触史')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息表',
                'verbose_name_plural': '用户信息表',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CheckRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(decimal_places=1, default=None, max_digits=4, verbose_name='体温')),
                ('location', models.CharField(default='', max_length=200, verbose_name='所在区域')),
                ('checkRecordTime', models.DateTimeField(auto_now=True, null=True, verbose_name='打卡时间')),
                ('checkRecordPerson', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='checkRecordPerson', to=settings.AUTH_USER_MODEL, verbose_name='打卡人')),
            ],
            options={
                'verbose_name': '打卡记录表',
                'verbose_name_plural': '打卡记录表',
            },
        ),
    ]
